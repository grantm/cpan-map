Consider: Intro.js - http://usablica.github.io/intro.js
http://diveintohtml5.info/history.html pushState + popState with data?
Switch to using /changes endpoint: http://api.metacpan.org/v0/changes/Moose
List Distros this maintainer has ++d
Add speakerdeck to profile icons http://explorer.metacpan.org/?url=%2Fauthor%2F_search%3Fpretty%3Dtrue%26q%3Dauthor.profile.name%3Aspeakerdeck%26size%3D100&content=
http://stackoverflow.com/questions/4015613/good-tutorial-for-using-html5-history-api-pushstate
Do reverse dependencies by dist rather than by module ?
  https://github.com/CPAN-API/metacpan-web/commit/e19c9565274b44a9fde68e9e5998e12ae92a2305
Broken POD TOC links (e.g.: File::Fetch)
When hovering, display dist/main/ns details in floating overlay
Get top uploaders this year/month/week from http://cpan.catalyst.net.nz/CPAN/RECENT-1Y.json, RECENT-1M.json, RECENT-1W.json
Get ++ counts: http://api.metacpan.org/v0/favorite/_search?q=distribution:Moose&fields=user,distribution&size=1
Drill down to see sub namespaces
Dist info: display namespace name + mass
Dist info: link to distribution page on metacpan (open in lightboxed iframe?)
Click to select - 'lock' selection (turn off hover handling) until the next click (leave a tooltip to explain?)
Support for touch devices
Plack app to serve content (and aggregate API queries)
Journey through CPAN (pause/play, faster, slower, rewind, loop)
Map image: hi-res version to include submerged masses
Map image: use opacity(?) to represent distribution freshness/age
Sightseeing ...
  * Busiest maintainers
  * Most depended-on modules
Implement map using canvas rather than image?


Who ++'d this module? (distro?)  (where "who" is only available for metacpan users who are also CPAN authors)

    /favorite/_search
    {
        "query": { "match_all": {} },
        "filter": {
            "term": {
               "favorite.distribution": "XML-Simple"
            }
        },
        "fields": ["user"]
    }

    /author/_search
    {
        "query": { "match_all": {} },
        "filter": {
            "term": {
                "author.user": [
                    "X0Nh9s_hThKMFjvWwailsg",   // Results from query above
                    "XLHD8mboQeeSEwRc3sAlPw",
                    "zFfBHlPCTOGILpo0Pe8G-w"
                ]
            }
        }
    }

